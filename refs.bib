@string{Irwin   = { John Irwin }}
@string{Loingtier= { Jean-Marc Loingtier }}
@string{Lopes   = { Cristina Lopes }}
@string{Maeda   = { Chris Maeda }}
@string{Mendhekar= { Anurag Mendhekar }}
@string{Lamping = { John Lamping }}
@string{Kiczales= { Gregor Kiczales }}
@string{Sperber = { Michael Sperber }}
@string{Appel	= { Andrew W. Appel }}
@string{Tolmach = { Andrew Tolmach }}
@string{Pitman =  { Kent M. Pitman }}

@Misc{Ludlam18,
  author =       {Eric Ludlam},
  title =        {Personal Communication},
  date =         {2018-08-13T19:44:23-04:00},
  month = {bug},
  howpublished = {Email},
  synopsis =     {In response to an email message from Stefan Monnier about
                  the early history of EIEIO, he wrote:
                  \begin{quote}
		  \sffamily
                  Back around 1995 or 6, I was
                  working at Raytheon and taking a class on using Object
                  request brokers, and the concept looked like something
                  that would be fun to hack in Emacs.  To support that
                  however I needed an object system, so I wrote something
                  that looked like c++ because I didn't know much of
                  anything about CLOS.  There was also a widget toolkit
                  I built on it as a demo. \\ Anyway, I got tons of feedback
                  about that, and why not CLOS.  I looked into CLOS and it
                  seemed fine so I converted it over to that style of
                  syntax.  Small bits of the old C++ variant remained
                  however, such as the array based storage and slot
                  protection, and the :custom slot feature which I had
                  originally intended to be based on the widget set I built
                  on EIEIO. \\ As for the name, finding a name for an object
                  system is tricky.  There was no "eio" predecessor.
                  I think it was always eieio once I had hit upon the name
                  idea.  I never did decide what the first "ei" should stand
                  for, I just knew it needed all the Es and Is.  If I'd
                  known about CLOS originally, I probably would have named
                  it ECLOS or something boring like that.  I still prefer
                  the full EIEIO name though.
                  \end{quote}
}
}

@Misc{RMS-compiler,
  author =       {Richard Stallman},
  title =        {Personal communication},
  date = {2019-08-26T19:19:01-04:00},
  month = {bug},
  howpublished = {Email},
  synopsis = {In response to an email message by Stefan Monnier asking
                  details about the history of the byte-compiler, he wrote:
\begin{quote}
> 3- I see in etc/NEWS.1-17 that byte-recompile-directory was introduced in \\
>    Emacs-1.1, which implies the byte-compiler already existed pretty much \\
>    from the very beginning of Emacs.  I assume you're the author of the   \\
>    original `byte-code` primitive and associated byte-compiler, right?
                  \smallskip \\
I don't remember whether anyone else contributed code for it, but I certainly\\
did this early on. \smallskip \\

     > Do you remember why you immediately wrote a byte-code implementation of
       Elisp \smallskip \\

For speed.
\end{quote}
},
}

@InProceedings{Neubauer01,
  author =       {Matthias Neubauer and}# Sperber,
  title =        {Down with {E}macs {L}isp: Dynamic Scope Analysis},
  crossref =     {ICFP01},
  pages =        {38--49},
  doi = {https://doi.org/10.1145/507635.507642},
  url = {https://dl.acm.org/doi/10.1145/507635.507642},
  secondurlprefix = {Also {\NA}},
  secondurl =          {http://www.deinprogramm.de/sperber/papers/dynamic-scope-analysis.pdf}
}

@InProceedings{Kiczales97,
  author =       Kiczales #{and}# Lamping #{and}# Mendhekar #{and}# Maeda
                  #{and}# Lopes #{and}# Loingtier #{and}# Irwin,
  title =        {Aspect-oriented programming},
  crossref =     {ECOOP97},
  pages =        {220-242},
  doi =          {10.1145/503209.503260},
  thirdurl = {https://web.archive.org/web/20200209063553/https://www.cs.ubc.ca/~gregor/papers/kiczales-ECOOP1997-AOP.pdf},
  urlprefix = {{\NA}},
  url = {https://www.cs.ubc.ca/~gregor/papers/kiczales-ECOOP1997-AOP.pdf},
  secondurlprefix= {Also {\NA}},
  secondurl = {https://link.springer.com/chapter/10.1007/BFb0053381},
  abstract =     {We have found many programming problems for which neither
                  procedural nor object-oriented programming techniques are
                  sufficient to clearly capture some of the important design
                  decisions the program must implement.  This forces the
                  implementation of those design decisions to be scattered
                  throughout the code, resulting in “tangled” code that is
                  excessively difficult to develop and maintain.  We present
                  an analysis of why certain design decisions have been so
                  difficult to clearly capture in actual code.  We call the
                  properties these decisions address aspects, and show that
                  the reason they have been hard to capture is that they
                  cross-cut the system's basic functionality.  We present
                  the basis for a new programming technique, called
                  aspect-oriented programming, that makes it possible to
                  clearly express programs involving such aspects, including
                  appropriate isolation, composition and reuse of the aspect
                  code.  The discussion is rooted in systems we have built
                  using aspect-oriented programming.}
}

@Misc{WhyNotTcl,
  title = {Why you should not use {Tcl}},
  author =       {Richard Stallman},
  note = {Newsgroup posting},
  month =        sep,
  year =         1994,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url =          {https://vanderburg.org/old_pages/Tcl/war/0000.html},
  secondurl = {https://web.archive.org/web/20200108104230/https://vanderburg.org/old_pages/Tcl/war/0000.html}
}


@Misc{RMS03,
  author =       {Richard Stallman},
  title = {Re: A plea for dynamically loadable extension modules},
  month =        jul,
  year =         2003,
  urldate =         {2019-05-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2003-07/msg00425.html},
  secondurl = {https://web.archive.org/web/20190925063202/https://lists.gnu.org/archive/html/emacs-devel/2003-07/msg00425.html}
}

@Misc{namespace-discussion,
  author =       {Bastien Guerry and Lars Magne Ingebrigtsen},
  title = {Re: lexicons},
  month =        aug,
  year =         2013,
  urldate =         {2019-08-30},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2013-08/msg00078.html},
  secondurl = {https://web.archive.org/web/20190918090610/https://lists.gnu.org/archive/html/emacs-devel/2013-08/msg00078.html}
}

@Misc{RMS-completeness,
  author =       {Richard Stallman},
  title = {Re: Real constants},
  month =        jul,
  year =         2005,
  urldate =         {2019-07-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2005-07/msg00882.html},
  secondurl = {https://web.archive.org/web/20190918080041/https://lists.gnu.org/archive/html/emacs-devel/2005-07/msg00882.html}
}

@InBook{RMS-text-props,
  author =       {Richard Stallman},
  title =        {GNU Emacs Lisp Reference Manual},
  chapter =      {Why Text Properties are not Intervals},
  publisher =    {Free Software Foundation},
  year =         2018,
  urldate = {2020-03-03},
  urlprefix = {{\NA}},
  url =          {https://www.gnu.org/software/emacs/manual/html_node/elisp/Not-Intervals.html},
  secondurl = {https://web.archive.org/web/20191224141917/https://www.gnu.org/software/emacs/manual/html_node/elisp/Not-Intervals.html},
}

@Misc{RMS-keyword-args-are-clunky,
  author =       {Richard Stallman},
  title = {Re: CL package serious deficiencies},
  month =        feb,
  year =         2012,
  urldate =         {2019-07-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00350.html},
  secondurl = {https://web.archive.org/web/20190918064247/https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00350.html}
}

@Misc{RMS-cl-big-doc,
  author =       {Richard Stallman},
  title = {Re: CL package serious deficiencies},
  month =        feb,
  year =         2012,
  urldate =         {2019-07-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00272.html},
  secondurl = {https://web.archive.org/web/20190918064231/https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00272.html}
}

@Misc{RMS-cl-doesnt-fit-elisp,
  author =       {Richard Stallman},
  title = {Re: CL package serious deficiencies},
  month =        feb,
  year =         2012,
  urldate =         {2019-07-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00308.html},
  secondurl = {https://web.archive.org/web/20190918064227/https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00308.html}
}

@Misc{RMS-cl-real,
  author =       {Richard Stallman},
  title = {Re: CL package serious deficiencies},
  month =        feb,
  year =         2012,
  urldate =         {2019-07-26},
  urlprefix = {{\NA}},
  url =          {https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00283.html},
  secondurl = {https://web.archive.org/web/20190918064231/https://lists.gnu.org/archive/html/emacs-devel/2012-02/msg00283.html}
}

%% Misc{RMS-,
%%   author =       {Richard Stallman},
%%   month =        feb,
%%   year =         2012,
%%   note =         {accessed 2019-07-26},
%%   url =          {}
%% }

@InProceedings{Rhodes14,
  author =       {Christopher Rhodes and Jan Moringen and David Lichteblau},
  title =        {Generalizers: New Metaobjects for Generalized Dispatch},
  crossref =     {ELS14},
  pages =        {20-27},
  urldate = {2020-03-03},
  urlprefix = {{\NA}},
  url =          {https://research.gold.ac.uk/9924/},
  secondurl = {https://arxiv.org/abs/1403.2765},
  abstract =     {This paper introduces a new metaobject, the generalizer,
                  which complements the existing specializer metaobject.
                  With the help of examples, we show that this metaobject
                  allows for the efficient implementation of complex
                  non-class-based dispatch within the framework of existing
                  metaobject protocols.  We present our modifications to the
                  generic function invocation protocol from the Art of the
                  Metaobject Protocol; in combination with previous work,
                  this produces a fully-functional extension of the existing
                  mechanism for method selection and combination, including
                  support for method combination completely independent from
                  method selection.  We discuss our implementation, within
                  the SBCL implementation of Common Lisp, and in that
                  context compare the performance of the new protocol with
                  the standard one, demonstrating that the new protocol can
                  be tolerably efficient.}
}

@Misc{GabrielLetter,
  author = 	 {Richard P. Gabriel},
  title = 	 {Letter to {Chris DiBona} and {Tim O'Reilly}},
  howpublished = {Web page},
  urlprefix = {{\NA}},
  url = {https://www.dreamsongs.com/DiBona-OReillyLetter.html},
  secondurl = {https://web.archive.org/web/20190104032051/https://www.dreamsongs.com/DiBona-OReillyLetter.html},
  urldate = {2018-08-18},
  year = 1999
}


@Misc{GPLHistory,
  key = 	 {GPLHistory},
  author = 	 {Li-Cheng Tai},
  title = 	 {The History of the {GPL}},
  howpublished = {Web page},
  month = 	 jul,
  year = 	 2001,
  urlprefix = {{\NA}},
  url = {http://www.free-soft.org/gpl_history/},
  secondurl = {https://web.archive.org/web/20191015034917/http://www.free-soft.org/gpl_history/},
  urldate = {2019-05-36}
}

@Misc{GMP,
  title =        {The {GNU} {M}ultiple {P}recision Arithmetic Library},
  key =          {GMP},
  year = 2020,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url =          {https://gmplib.org/},
  secondurl = {https://web.archive.org/web/20200225023116/https://gmplib.org/}
}

@Article{Tichy85,
  author =       {Walter F. Tichy},
  note =         {Purdue University},
  title =        {{RCS} - A System for Version Control},
  journal =      {Software Practice\&Experience},
  volume =       15,
  number =       7,
  pages =        {637-654},
  year =         1985,
  doi = {https://doi.org/10.1002/spe.4380150703},
  urldate = {2020-03-03},
  urlprefix = {{\NA}},
  url =          {https://www.gnu.org/software/rcs/tichy-paper.pdf},
  secondurl = {https://web.archive.org/web/20191224233920/https://www.gnu.org/software/rcs/tichy-paper.pdf}
}


@InProceedings{Berliner90,
  author =       {Berliner, Brian},
  title =        {CVS II: Parallelizing software development},
  booktitle =    {USENIX Winter 1990 Technical Conference},
  year =         1990,
  volume =       341,
  pages =        352,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {https://docs.freebsd.org/44doc/psd/28.cvs/paper.pdf},
  secondurl = {https://web.archive.org/web/20190128051609/https://docs.freebsd.org/44doc/psd/28.cvs/paper.pdf}
}

@Manual{ELispManual2018,
  title = 	 {GNU Emacs Lisp Reference Manual},
  author = 	 {Bil Lewis and Dan LaLiberte and Richard Stallman and {GNU Manual Group}},
  organization = {Free Software Foundation},
  address = 	 {51 Franklin St, Fifth Floor, Boston, MA 02110-1301},
  edition = 	 {3.1},
  year = 	 2018,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {https://www.gnu.org/software/emacs/manual/elisp.html},
  secondurl = {https://web.archive.org/web/20200122091452/https://www.gnu.org/software/emacs/manual/elisp.html}
}


@Manual{Gosling1981,
  title = 	 {{Unix} {Emacs}},
  author = 	 {James Gosling},
  organization = {Carnegie-Mellon University},
  year = 	 1981,
  url = {https://archive.org/details/bitsavers_cmuGosling_4195808}}

@Misc{Stallman2002,
  author = 	 {Richard Stallman},
  title = 	 {My {Lisp} Experiences and the Development of {GNU Emacs}},
  howpublished = {Speech transcript},
  month = 	 oct,
  year = 	 2002,
  note = 	 {International Lisp Conference},
  urldate = {2020-03-03},
  urlprefix = {{\NA}},
  url = {https://www.gnu.org/gnu/rms-lisp.en.html},
  secondurl = {https://web.archive.org/web/20200217150413/https://www.gnu.org/gnu/rms-lisp.en.html}
}


@Manual{Moon1974,
  title = 	 {{MACLISP} Reference Manual},
  author = 	 {David A. Moon},
  organization = {Project MAC --- M.I.T.},
  address = 	 {Cambridge, Massachusetts},
  note = 	 {Revision 0},
  month = 	 apr,
  year = 	 1974,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {http://www.softwarepreservation.org/projects/LISP/MIT/Moon-MACLISP_Reference_Manual-Apr_08_1974.pdf},
  secondurl = {https://web.archive.org/web/20200102200158/http://www.softwarepreservation.org/projects/LISP/MIT/Moon-MACLISP_Reference_Manual-Apr_08_1974.pdf}
  }

@ARTICLE{Murphy09,
  author =       {Dan Murphy},
  journal =      {IEEE Annals of the History of Computing},
  title =        {The Beginnings of TECO},
  year =         2009,
  volume =       31,
  number =       4,
  pages =        {110-115},
  doi =          {https://doi.org/10.1109/MAHC.2009.127},
  ISSN =         {1058-6180},
  month =        {Oct},
  url = {https://ieeexplore.ieee.org/document/5370787}
}

@INPROCEEDINGS{Ohmaki2002,
  author =       {Kazuhito Ohmaki},
  booktitle =    {7th IEEE International Symposium on High Assurance Systems
                  Engineering},
  title =        {Open source software research activities in {AIST} towards
                  secure open systems},
  year =         2002,
  pages =        {37-41},
  keywords =     {operating systems (computers);Unix;information
                  technology;security of data;software engineering;open
                  source software research activities;AIST;secure open
                  systems;open source software;secure software;cross site
                  scripting;Web servers;application software;Linux operating
                  system;Open source software;Open systems;Application
                  software;Linux;Web server;Government;Information
                  technology;Software quality;Information security;Operating
                  systems},
  ISSN =         {1530-2059},
  month =        {Oct},
  doi = {https://doi.org/10.1109/HASE.2002.1173098},
  url = {https://www.computer.org/csdl/proceedings-article/2002/hase/12OmNzahckL/12OmNqNG3ee}
}

@TechReport{Pitman1983,
  author = 	 Pitman,
  title = 	 {The Revised {Maclisp} Manual},
  institution =  {Laboratory for Computer Science, MIT},
  year = 	 1983,
  number = 	 {Technical Report 295},
  address = 	 {Cambridge, Massachusetts},
  note = 	 {Saturday Morning Edition},
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {http://www.maclisp.info/pitmanual/},
  secondurl = {https://web.archive.org/web/20181108211218/www.maclisp.info/pitmanual/}}


@Manual{RacketReference2018,
  title = 	 {The Racket Reference},
  author = 	 {Matthew Flatt and {PLT}},
  organization = {PLT},
  edition = 	 {v.7.0},
  month = 	 aug,
  year = 	 2018,
  urlprefix = {{\NA}},
  urldate = {2018-09-03},
  url = {https://docs.racket-lang.org/reference/index.html},
  secondurl = {https://web.archive.org/web/20180930065049/http://docs.racket-lang.org/reference/index.html}
}

@Manual{ElispIntro,
  title = 	 {An Introduction to Programming in {Emacs Lisp}},
  author = 	 {Robert J.\ Chassell},
  organization = {Free Software Foundation},
  address = 	 {Boston, Massachusetts},
  edition = 	 {{Emacs} version 26.1},
  year = 	 2018,
  note =         {2018-12-14},
  urlprefix = {{\NA}},
  url = {https://www.gnu.org/software/emacs/manual/html_mono/eintr.html},
  secondurl = {https://web.archive.org/web/20181214081848/https://www.gnu.org/software/emacs/manual/html_mono/eintr.html}}

@techreport{Unicode6,
  added-at = {2010-08-05T20:43:21.000+0200},
  address = {Mountain View, CA},
  author = {{The Unicode Consortium}},
  biburl = {https://www.bibsonomy.org/bibtex/274d91a6ae64cbf988cb36d1a31e1ff6a/voj},
  institution = {Unicode Consortium},
  interhash = {c9670513ac67cf80267ae2429ce54496},
  intrahash = {74d91a6ae64cbf988cb36d1a31e1ff6a},
  isbn = {978-1-936213-01-6},
  keywords = {Characters Encoding Unicode standard},
  number = {Version 6.0.0},
  timestamp = {2011-06-03T11:52:47.000+0200},
  title = {{The Unicode Standard}},
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {http://www.unicode.org/versions/Unicode6.0.0/},
  secondurl = {https://web.archive.org/web/20180801000000*/http://www.unicode.org/versions/Unicode6.0.0/},
  year = 2011
}

@TechReport{Birkholz1993,
  author = 	 {Matthew Birkholz},
  title = 	 {{Emacs Lisp} in {Edwin Scheme}},
  institution =  {Massachusetts Institute of Technology},
  year = 	 1993,
  number = 	 {A.I. Memo No. TR-1451},
  month = 	 sep,
  urlprefix = {{\NA}},
  urldate = {2020-03-03},
  url = {ftp://publications.ai.mit.edu/ai-publications/1000-1499/AITR-1451.ps.Z},
  secondurl = {https://web.archive.org/web/2017*/ftp://publications.ai.mit.edu/ai-publications/1000-1499/AITR-1451.ps.Z}
  }



@Manual{MITScheme2014,
  title = 	 {{MIT/GNU} Scheme},
  organization = {Massachusetts Institute of Technology},
  year = 	 2014,
  note = 	 {Version 9.4},
  urlprefix = {{\NA}},
  urldate = {2014-12-24},
  url = {https://www.gnu.org/software/mit-scheme/documentation/mit-scheme-user/index.html},
  secondurl = {https://web.archive.org/web/20141224003823/https://www.gnu.org/software/mit-scheme/documentation/mit-scheme-user/index.html}
  }



@Article{Kellomaki93,
  author =       {Pertti Kellomäki},
  title =        {{PSD} - a Portable {Scheme} Debugger},
  journal =      {{SIGPLAN} Lisp Pointers},
  year =         1993,
  volume =       {VI},
  number =       1,
  pages =        {15-23},
  month =        jan,
  doi = {https://doi.org/10.1145/173770.173772},
  url =          {https://dl.acm.org/citation.cfm?doid=173770.173772},
  abstract =     {Psd is a portable debugger for the Scheme language.
                  Debugging with Psd is accomplished by instrumenting the
                  original source program.  When the instrumented program is
                  run, it presents the user with an interactive interface
                  that lets him or her examine and change values of
                  variables, set breakpoints, and single step evaluation.
                  Psd is designed to be run within GNU Emacs, which is used
                  for displaying the current source code position.}
}

@InProceedings{Tolmach90,
  author =       Tolmach #{and}# Appel,
  title =        {Debugging {S}tandard {ML} without reverse engineering},
  crossref =     {LFP90},
  pages =        {1-12},
  doi = {https://doi.org/10.1145/91556.91564},
  url =          {https://dl.acm.org/citation.cfm?id=91564},
  abstract =     {We have built a novel and efficient replay debugger for
                  our Standard ML compiler.  Debugging facilities are
                  provided by instrumenting the user's source code; this
                  approach, made feasible by ML's safety property, is
                  machine-independent and back-end independent.  Replay is
                  practical because ML is normally used functionally, and
                  our compiler uses continuation-passing style; thus most of
                  the program's state can be checkpointed quickly and
                  compactly using call-with-current-continuation.  Together,
                  instrumentation and replay support a simple and elegant
                  debugger featuring full variable display, polymorphic type
                  resolution, stack trace-back, breakpointing, and reverse
                  execution, even though our compiler is very highly
                  optimizing and has no run-time stack.}
}

@Misc{KawaScheme,
  author =       {Per Bothner},
  year =         2020,
  title =        {The {Kawa} {Scheme} language},
  urldate = {2020-03-04},
  urlprefix = {{\NA}},
  url =          {https://www.gnu.org/software/kawa/index.html},
  secondurl = {https://web.archive.org/web/20200108175853/https://www.gnu.org/software/kawa/news.html}
}

@Article{Bothner2001,
  author = 	 {Per Bothner},
  title = 	 {{JEmacs} - The {Java}/{Scheme}-based {Emacs}},
  journal = 	 {Free Software Magazine},
  year = 	 2002,
  month = 	 mar,
  urldate = {2020-03-04},
  urlprefix = {{\NA}},
  url = {http://jemacs.sourceforge.net/JEmacs-FSM.html},
  secondurl = {https://web.archive.org/web/20190924233555/http://jemacs.sourceforge.net/JEmacs-FSM.html}
  }


@Manual{Guile2020,
  title = 	 {{GNU} {Guile} 3.0.0 Reference Manual},
  organization = {Free Software Foundation},
  month = 	 jan,
  year = 	 2020,
  urldate = {2020-01-15},
  urlprefix = {{\NA}},
  url = {https://www.gnu.org/software/guile/manual/},
  secondurl = {https://web.archive.org/web/20200304160710/https://www.gnu.org/software/guile/manual/}
}

@MastersThesis{Crestani2005,
  author =       {Marcus Crestani},
  title =        {A New Garbage Collector for {XEmacs}},
  school =       {Universität Tübingen},
  urldate = {2020-03-04},
  urlprefix = {{\NA}},
  url =          {http://crestani.de/xemacs/pdf/thesis-newgc.pdf},
  secondurl = {https://web.archive.org/web/20190921060916/http://crestani.de/xemacs/pdf/thesis-newgc.pdf},
  year =         2005
}

@inproceedings{Stallman1981,
 author = {Stallman, Richard M.},
 title = {{EMACS}: The Extensible, Customizable Self-documenting Display Editor},
 booktitle = {Proceedings of the ACM SIGPLAN SIGOA Symposium on Text Manipulation},
 year = 1981,
 location = {Portland, Oregon, USA},
 pages = {147--156},
 numpages = 10,
 urldate = {2020-03-04},
 urlprefix = {{\NA}},
 url = {https://www.gnu.org/software/emacs/emacs-paper.html},
 doi = {https://doi.org/10.1145/872730.806466},
 secondurl = {https://dl.acm.org/doi/10.1145/872730.806466},
 acmid = 806466,
 publisher = {ACM},
 address = {New York, NY, USA},
} 

@inproceedings{SteeleGabriel1993,
 author = {Steele,Jr., Guy L. and Gabriel, Richard P.},
 title = {The Evolution of {Lisp}},
 booktitle = {The Second ACM SIGPLAN Conference on History of Programming Languages},
 series = {HOPL-II},
 year = {1993},
 location = {Cambridge, Massachusetts, USA},
 pages = {231--270},
 numpages = {40},
 acmid = {155373},
 publisher = {ACM},
 address = {New York, NY, USA},
 url = {https://dl.acm.org/doi/10.1145/155360.155373},
 doi = {https://doi.org/10.1145/155360.155373}
}

@Book{CLtL1,
  author = 	 {Guy L. Steele},
  title = 	 {{Common Lisp} the Language},
  publisher = 	 {Digital Press},
  year = 	 1984,
  isbn = {978-0-932376-41-1},
  address = {313 Washington Street Newton, MA, United States},
  edition = 	 {1st}}
  
@InProceedings{DeMichielGabriel1987,
 author = {DeMichiel, Linda G. and Gabriel, Richard P.},
 title = {The {Common Lisp Object System}: An Overview},
 booktitle = {European Conference on Object-oriented Programming on ECOOP '87},
 year = 1987,
 isbn = {0-387-18353-1},
 location = {Paris, France},
 pages = {151--170},
 numpages = 20,
 urlprefix = {{\NA}},
 urldate = {2020-03-04},
 url = {https://www.dreamsongs.com/Files/ECOOP.pdf},
 secondurl = {https://link.springer.com/chapter/10.1007/3-540-47891-4_15},
 doi = {https://doi.org/10.1007/3-540-47891-4_15},
 acmid = 35000,
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
}

@TechReport{R2RS,
  author = 	 {William Clinger},
  title = 	 {The Revised Revised Report on {Scheme}},
  institution =  {MIT},
  year = 	 1985,
  number = 	 {AI Memo No.\ 848},
  urlprefix = {{\NA}},
  urldate = {2020-03-04},
  url = {https://dspace.mit.edu/handle/1721.1/5600},
  secondurl = {https://web.archive.org/web/20150919023621/https://dspace.mit.edu/handle/1721.1/5600},
  month = 	 aug}

@InCollection{Pitman2001,
  author = 	 Pitman,
  editor = 	 {A. Romanovsky and C. Dony and J.L. Knudsen and A. Tripathi},
  booktitle = 	 {Advances in Exception Handling Techniques},
  title = 	 {Condition Handling in the {Lisp} Language Family},
  publisher = 	 {Springer},
  year = 	 2001,
  volume = 	 2022,
  series = 	 {Lecture Notes in Computer Science},
  urlprefix = {{\NA}},
  urldate = {2020-03-04},
  url = {http://www.nhplace.com/kent/Papers/Condition-Handling-2001.html},
  secondurl = {https://link.springer.com/chapter/10.1007%2F3-540-45407-1_3}}

@Misc{Steingold99,
  author =       {Sam Steingold},
  title =        {Load {E}macs-{L}isp files into {C}ommon {L}isp},
  year =         1999,
  urldate = {2020-03-04},
  url =          {https://sourceforge.net/p/clocc/hg/ci/default/tree/src/cllib/elisp.lisp},
  urlprefix = {{\NA}},
  secondurl = {https://web.archive.org/web/20190925063736/https://sourceforge.net/p/clocc/hg/ci/default/tree/src/cllib/elisp.lisp}
}

@inproceedings{Hayes1997,
 author = {Hayes, Barry},
 title = {Ephemerons: A New Finalization Mechanism},
 booktitle = {Proceedings of the 12th ACM SIGPLAN Conference on Object-oriented Programming, Systems, Languages, and Applications},
 series = {OOPSLA '97},
 year = {1997},
 location = {Atlanta, Georgia, USA},
 pages = {176--183},
 numpages = {8},
 acmid = {263733},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {finzlization, garbage collection, resource management, weak pointers},
 doi = {https://doi.org/10.1145/263700.263733},
 url = {https://dl.acm.org/doi/10.1145/263700.263733}
}

@Manual{XEmacsLispRef1998,
  title = 	 {{XEmacs} {Lisp} Reference Manual},
  author = 	 {Ben Wing and Bil Lewis and Dan LaLiberte and Richard Stallman},
  edition = 	 {Version 3.3},
  year = 	 1998,
  month = apr,
  note = 	 {For XEmacs Version 21.0},
  urlprefix = {{\NA}},
  urldate = {2020-03-04},
  url = {https://www.xemacs.org/Documentation/21.5/html/lispref.html},
  secondurl = {https://web.archive.org/web/20160504192740/https://www.xemacs.org/Documentation/21.5/html/lispref.html}
  }

@InProceedings{Bawden1999,
  author = 	 {Alan Bawden},
  title = 	 {Quasiquotation in {Lisp}},
  booktitle = {Proceedings of the ACM SIGPLAN Workshop on PEPM {Partial Evaluation and Semantics-Based Program Manipulation}{ PEPM '99}},
  editor = {Olivier Danvy},
  address = {San Antonio, Texas, USA},
  year = 1999,
  month = jan,
  pages =	 {4--12},
  urlprefix = {{\NA}},
  urldate = {2020-03-04},
  url = {http://people.csail.mit.edu/alan/ftp/quasiquote-v59.ps.gz},
  secondurl = {https://web.archive.org/web/20170515044951/http://people.csail.mit.edu/alan/ftp/quasiquote-v59.ps.gz}
}

@Misc{HyperSpec,
  author = 	 Pitman,
  title = 	 {{Common Lisp} {HyperSpec}},
  urlprefix = {{\NA}},
  urldate = {2020-03-04},
  url = {http://www.lispworks.com/documentation/HyperSpec/Front/index.htm},
  secondurl = {https://web.archive.org/web/20200114180058/http://www.lispworks.com/documentation/HyperSpec/Front/index.htm},
  year = 2005}

@Misc{Stallman2018-personal,
  author = 	 {Richard Stallman},
  title = 	 {Personal communication},
  howpublished = {Email},
  month = 	 nov,
  year = 	 2018,
  synopsis = {This email exchange originated from a review Richard Stallman conducted on an early version of this paper.
In this exchange, he provided detailed comments on selected sections.
In particular, he mentioned his work on ZWEI and the fact
that docstrings were already present in the first TECO-based Emacs.
Here is the relevant section from that exchange on ZWEI, written by Richard Stallman:

\begin{quote}
\sffamily I did some work on ZWEI, the second iteration of EINE.  In ZWEI (Zwei
Was Eine Initially), buffer-modifying primitives took arguments to
specify what text to operate on.  I found that clumsy, so in Emacs
Lisp I made them operate at point.
\end{quote}

Stallman, referring to the docstrings feature, also wrote:

\begin{quote}
\textsf{These came from the original TECO-based Emacs.}
\end{quote}
}}


@TechReport{Weinreb1979,
  author = 	 {Daniel L. Weinreb},
  title = 	 {A Real-Time Display-oriented Editor for the {LISP Machine}},
  institution =  {MIT EECS Department},
  year = 	 1979,
  month = 	 jan,
  note = 	 {{\\ \noindent In his Undergraduate thesis, Daniel Weinreb describes the ZWEI user interface, its interaction
   with the Lisp machine, its implementation strategies and engineering trade-offs, and the future of the system.}}}
  
@Misc{MulticsEmacs1996,
  author = {Bernard S. Greenberg},
  title = {{Multics Emacs}: The History, Design and Implementation},
  urldate = {2020-03-06},
  urlprefix = {{\NA}},
  url = {https://multicians.org/mepap.html},
  secondurl = {https://web.archive.org/web/20200102215120/https://www.multicians.org/mepap.html},
  year = 1996,
  month = apr}
  
@Misc{GreenspunsRule,
  author = {Philip Greenspun},
  title = {10th rule of programming},
  urldate = {2020-03-06},
  urlprefix = {{\NA}},
  url = {http://philip.greenspun.com/bboard/q-and-a-fetch-msg?msg_id=000tgU},
  secondurl = {https://web.archive.org/web/20170919102254/http://philip.greenspun.com/bboard/q-and-a-fetch-msg?msg_id=000tgU},
  year = 2003,
  month = sep}
  
@Misc{JWZTimeline,
   author = {Jamie Zawinski},
   title = {{Emacs} Timeline},
   urldate = {2020-03-06},
   urlprefix = {{\NA}},
   url = {https://www.jwz.org/doc/emacs-timeline.html},
   secondurl = {https://web.archive.org/web/20200212221812/https://www.jwz.org/doc/emacs-timeline.html},
   year = 2007,
   month = oct}
   
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

@string{ECOOP	= {European Conference on Object-Oriented Programming}}
@string{ELS	= {European Lisp Symposium}}
@string{ICFP	= {International Conference on Functional Programming}}
@string{LFP	= {Conference on Lisp and Functional Programming}}

@Proceedings{LFP90,
  title =	 LFP,
  year =	 1990,
  booktitle =	 LFP
}
@proceedings{ELS14,
  title =        ELS,
  booktitle =    ELS,
  year =         2014
}

@Proceedings{ICFP01,
  title = 	 ICFP,
  booktitle =	 ICFP,
  year = 	 2001,
  key =		 {ICFP'01},
  month =	 sep,
  address =  	 {Florence, Italy}
}

@Misc{SXEmacs,
  title =        {{SXEmacs} -- Redefining {Emacs}},
  key =          {SXEmacs},
  howpublished = {Web site},
  url =          {http://www.sxemacs.org/}
}

@article{HaynesFriedman1987,
 author = {Haynes, Christopher T. and Friedman, Daniel P.},
 title = {Embedding Continuations in Procedural Objects},
 journal = {ACM Trans. Program. Lang. Syst.},
 issue_date = {Oct. 1987},
 volume = {9},
 number = {4},
 month = oct,
 year = {1987},
 issn = {0164-0925},
 pages = {582--598},
 numpages = {17},
 acmid = {30392},
 publisher = {ACM},
 address = {New York, NY, USA},
 doi = {https://doi.org/10.1145/29873.30392},
 url = {https://dl.acm.org/doi/10.1145/29873.30392},
 secondurlprefix = {{\NA}},
 secondurl = {ftp://ftp.extreme.indiana.edu/pub/techreports/TR213.pdf},
} 

@Misc{WiegleyAsync2019,
  author = 	 {John Wiegley},
  title = 	 {Simple library for asynchronous processing in {Emacs}},
  howpublished = {Github project},
  year = 	 2019,
  urldate = {2020-03-06},
  urlprefix = {{\NA}},
  url = {https://github.com/jwiegley/emacs-async},
  secondurl = {https://web.archive.org/web/20190925224033/https://github.com/jwiegley/emacs-async}
}

@Book{Seibel2009,
  author = 	 {Peter Seibel},
  title = 	 {Coders at Work: Reflections on the Craft of Programming},
  publisher = 	 {Apress},
  year = 	 2009,
  month = 	 sep}

@InProceedings{GabrielEtAl1990,
  author = 	 {Richard P.\ Gabriel and Nickieben Bourbaki and Matthieu Devin and Patrick Dussud and David N.\ Gray and Harlan B.\ Sexton},
  title = 	 {Foundation for a {C++} Programming Environment},
  booktitle = {Proceedings of {C++ at Work}},
  year = 	 1990,
  month = 	 sep,
  note = {\\ \noindent In this paper, the authors describe the architecture of the nascent C++ development environment Lucid
  had been working on.  The architecture was based on a set of lightly coupled separate tools integrated by a kernel.  These tools
  produce annotations that can be displayed and analyzed by a UI.}
}

@Misc{Arcenaux-interview,
  author = 	 {Joseph Arceneaux},
  title = 	 {Interview conducted by {Michael Sperber}},
  month = 	 may,
  year = 	 2019}

@Misc{Gabriel-personal,
  author = 	 {Richard P.\ Gabriel},
  title = 	 {Personal communication},
  howpublished = {Email},
  month = 	 may,
  year = 	 2019,
  synopsis = {Richard Gabriel responded to a series of questions asked via email by Michael Sperber about the role
  of Emacs in the design of Lucid's Energize IDE.  In particular, Gabriel wrote that Emacs
  was chosen in response to a series of interviews with potential users, who wanted to use their favorite interactive tools.
  Gabriel also confirmed that Emacs Lisp was not a big factor in the implementation of Energize, which meant
  that its performance did not matter much for the technical success of the Energize implementation.}}

@Misc{Mlynarik-personal,
  author = 	 {Richard Mlynarik},
  title = 	 {Personal communication},
  howpublished = {Email},
  month = 	 aug,
  year = 	 2019,
  synopsis = {Mlynarik responded to an email from Michael Sperber about the
  authorship of the union implementation.  Mlynarik wrote about the philosophical differences he
  had with Richard Stallman over the use of type-safe abstractions in Emacs Lisp.  He wrote:

\begin{quote}
\sffamily Actually having a real C structure representing the base
Lisp object implementation was MASSIVELY helpful in debugging,
since GDB started with at least a clue about what was in them.
\end{quote}}}

@Misc{EmacsLore,
  author = 	 {David Moon and others},
  title = 	 {{Emacs} Lore},
  howpublished = {Mailing list excerpt},
  month = 	 jul,
  year = 	 1978,
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url =          {https://ban.ai/multics/doc/emacs.lore.txt},
  secondurl = {https://web.archive.org/web/20200306154734/https://ban.ai/multics/doc/emacs.lore.txt}
}

@Misc{FerrierNamespaces,
  author = {Nic Ferrier},
  title = {Hatching a plan to add namespaces to {EmacsLisp}},
  howpublished = {Blog post},
  month = jun,
  year = 2013,
  urlprefix = {{\NA}},
  urldate = {2020-03-12},
  url = {http://nic.ferrier.me.uk/blog/2013_06/adding-namespaces-to-elisp},
  secondurl = {https://web.archive.org/web/20190921040559/http://nic.ferrier.me.uk/blog/2013_06/adding-namespaces-to-elisp}
  }

@Manual{WeinrebMoon1981,
  title = 	 {{Lisp Machine} Manual},
  author = 	 {Daniel Weinreb and David Moon},
  organization = {Massachusetts Institute of Technology},
  address = 	 {Cambridge, Massachusetts},
  edition = 	 {Third},
  month = 	 mar,
  year = 	 1981,
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {http://www.bitsavers.org/pdf/mit/cadr/chinual_3rdEd_Mar81.pdf},
  secondurl = {https://web.archive.org/web/20200103040539/http://www.bitsavers.org/pdf/mit/cadr/chinual_3rdEd_Mar81.pdf}
}

@Misc{ClojureDotOrg,
  title = 	 {The {Clojure} Programming Language},
  howpublished = {Web site},
  key = {Clojure},
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {https://clojure.org/},
  secondurl = {https://web.archive.org/web/20200218082557/https://clojure.org/}
}

@inproceedings{Clinger1998,
 author = {Clinger, William D.},
 title = {Proper Tail Recursion and Space Efficiency},
 booktitle = {Proceedings of the ACM SIGPLAN 1998 Conference on Programming Language Design and Implementation},
 series = {PLDI '98},
 year = {1998},
 isbn = {0-89791-987-4},
 location = {Montreal, Quebec, Canada},
 pages = {174--185},
 numpages = {12},
 url = {https://dl.acm.org/doi/10.1145/277650.277719},
 doi = {https://doi.org/10.1145/277650.277719},
 acmid = {277719},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@article{McCarthy1960,
 author = {McCarthy, John},
 title = {Recursive Functions of Symbolic Expressions and Their Computation by Machine, Part {I}},
 journal = {Commun. ACM},
 issue_date = {April 1960},
 volume = {3},
 number = {4},
 month = apr,
 year = {1960},
 issn = {0001-0782},
 pages = {184--195},
 numpages = {12},
 url = {https://dl.acm.org/doi/10.1145/367177.367199},
 doi = {https://doi.org/10.1145/367177.367199},
 acmid = {367199},
 publisher = {ACM},
 address = {New York, NY, USA},
}

@Misc{UnexecGlibc,
  author = 	 {Jake Edge},
  title = 	 {Removing support for {Emacs} unexec from {Glibc}},
  howpublished = {Web article},
  month = 	 jan,
  year = 	 2016,
  note = 	 {{LWN.net}},
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {https://lwn.net/Articles/673724/},
  secondurl = {https://web.archive.org/web/20191101083505/https://lwn.net/Articles/673724/}
}

@Misc{GNULightning,
  title = 	 {{GNU Lightning}},
  year = {2020},
  key = {Lightning},
  howpublished = {Project web page},
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {https://www.gnu.org/software/lightning/},
  secondurl = {https://web.archive.org/web/20191222201436/https://www.gnu.org/software/lightning/}
}

@Misc{GNULibjit,
  title = 	 {{GNU LibJIT}},
  year = {2020},
  key = {LibJIT},
  howpublished = {Project web page},
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {https://www.gnu.org/software/libjit/},
  secondurl = {https://web.archive.org/web/20191222233941/https://www.gnu.org/software/libjit/}
}

@InBook{ComputedGOTO,
  author = 	 {{Free Software Foundation}},
  key = {GCC},
  title = 	 {Using the {GNU Compiler Collection} ({GCC})},
  chapter = 	 {Labels as Values},
  publisher = 	 {{Free Software Foundation}},
  year = 	 2020,
  urlprefix = {{\NA}},
  urldate = {2020-03-06},
  url = {https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html},
  secondurl = {https://web.archive.org/web/20191021235120/https://gcc.gnu.org/onlinedocs/gcc/Labels-as-Values.html}}
  

@proceedings{ECOOP97,
  title =        ECOOP,
  booktitle =    ECOOP,
  year =         1997
}
